{
    "swagger": "2.0",
    "info": {
        "title": "Leaderboards API",
        "description": "Manage various leaderboards for a game.",
        "version": "1.0.0"
    },
    "produces": [
        "application/json"
    ],
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/players": {
            "get": {
                "summary": "",
                "description": "Returns all players from the system that the user has access to",
                "x-swagger-router-controller": "players",
                "operationId": "getPlayers",
                "responses": {
                    "200": {
                        "description": "players response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Player"
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "",
                "description": "Save the player to the system",
                "x-swagger-router-controller": "players",
                "operationId": "postPlayer",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                        "name": "firstName",
                        "in": "formData",
                        "description": "Name of player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "formData",
                        "description": "Last name of player",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "displayName",
                        "in": "formData",
                        "description": "Last name of player",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {                    
                    "401": {
                        "description": "Unauthorized"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/players/{id}": {
            "get": {
                "summary": "",
                "description": "Returns on player from the system that the user has access to",
                "x-swagger-router-controller": "players",
                "operationId": "getSinglePlayer",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "ID of player to fetch",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "player response",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Player"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Player": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/NewPlayer"
            }, {
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            }]
        },
        "NewPlayer": {
            "type": "object",
            "required": [
                "id",
                "firstName",
                "lastName",
                "displayName"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        }
    }
}